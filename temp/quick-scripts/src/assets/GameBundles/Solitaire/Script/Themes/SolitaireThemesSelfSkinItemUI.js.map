{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\SolitaireThemesSelfSkinItemUI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,0DAAyD;AACzD,4DAA2D;AAC3D,wEAAmE;AAG7D,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAO1C;IAA2D,iDAA4C;IAAvG;QAAA,qEAkCC;QAjCkD,cAAQ,GAAY,IAAI,CAAC;QACxB,iBAAW,GAAa,IAAI,CAAC;QACtB,aAAO,GAAoB,IAAI,CAAA;QAE9E,cAAQ,GAA4B,IAAI,CAAC;;IA6BrD,CAAC;IA3Ba,gDAAQ,GAAlB,cAA6B,CAAC;IACpB,iDAAS,GAAnB,cAA8B,CAAC;IACrB,8CAAM,GAAhB,UAAiB,MAAyC;QAA1D,iBAeC;QAdG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAG,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,aAAW,IAAI,CAAC,IAAI,CAAC,KAAO,CAAE,CAAC;QACtG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,+BAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,UAAA,IAAI;YACzE,+BAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,+BAAc,CAAC,IAAI,CAAC,WAAW,EAAE,UAAA,SAAS;YAClD,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAA;QAC7D,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAuD,uCAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;YAC/I,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;SACvB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEO,mDAAW,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,iDAAS,GAAT,UAAU,IAAmB;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAhCsC;QAAtC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;mEAAkC;IAChC;QAAvC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;sEAAsC;IAC9B;QAA9C,QAAQ,CAAC,EAAC,IAAI,EAAC,yBAAe,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;kEAAwC;IAHrE,6BAA6B;QADjD,OAAO;OACa,6BAA6B,CAkCjD;IAAD,oCAAC;CAlCD,AAkCC,CAlC0D,EAAE,CAAC,MAAM,GAkCnE;kBAlCoB,6BAA6B","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSkin } from \"../DataCache/SolitaireSkinDataCache\";\nimport { SolitaireLogic } from \"../Logic/SolitaireLogic\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport UISettingToggle from \"../_Public/Component/UISettingToggle\";\nimport SolitaireThemesEffectUI, { SolitaireThemesEffectUIArgs } from \"./SolitaireThemesEffectUI\";\n\nconst {ccclass, property} = cc._decorator;\nexport type SolitaireThemesSelfSkinItemUIArgs = {\n    skin: SolitaireSkin,\n    index: number,\n    OnClickEdit: (index: number)=>void\n}\n@ccclass\nexport default class SolitaireThemesSelfSkinItemUI extends ii.UIComp<SolitaireThemesSelfSkinItemUIArgs> {\n    @property({type:cc.Node,visible:true}) private _content: cc.Node = null;\n    @property({type:cc.Label,visible:true}) private _titleLabel: cc.Label = null;\n    @property({type:UISettingToggle,visible:true}) private _toggle: UISettingToggle = null\n    \n    private m_Effect: SolitaireThemesEffectUI = null;\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: SolitaireThemesSelfSkinItemUIArgs): void {\n        this.SetIIClickHandler(\"OnEdit\", this.OnClickEdit.bind(this));\n        this._titleLabel.string = `${this.args.index === 0 ? \"Default Theme\" : `Theme - ${this.args.index}`}`;\n        this._toggle.Init(this.args.index === SolitaireLogic.skin.skinIndexBV.v, isOn => {\n            SolitaireLogic.skin.SelectSkinIndex(this.args.index);\n        });\n\n        this.BindBV(SolitaireLogic.skin.skinIndexBV, skinIndex => {\n            this._toggle.SyncUI(this.args.index === skinIndex);\n            this._toggle.SetBlockInput(this.args.index === skinIndex)\n        }, true);\n\n        this.m_Effect = ii.UIMgr.ins.Create<SolitaireThemesEffectUI, SolitaireThemesEffectUIArgs>(SolitairePrefabCfg.pfb.comp.SolitaireThemesEffectUI.key, {\n            skin: this.args.skin\n        }, this._content).CloseBy(this);\n    }\n\n    private OnClickEdit() {\n        this.args.OnClickEdit(this.args.index);\n    }\n\n    RefreshUI(skin: SolitaireSkin) {\n        this.args.skin = skin;\n        this.m_Effect.SetSkin(skin);\n    }\n}\n"]}