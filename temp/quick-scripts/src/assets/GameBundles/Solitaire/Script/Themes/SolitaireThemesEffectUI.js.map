{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\SolitaireThemesEffectUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSkin } from \"../DataCache/SolitaireSkinDataCache\";\nimport { EPokerStatus, ESuit } from \"../SolitaireEnums\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport { SolitaireSpriteFrameCfg } from \"../SolitaireSpriteFrameCfg\";\nimport SolitaireThemesEffectColumnUI, { SolitaireThemesEffectColumnUIArgs } from \"./SolitaireThemesEffectColumnUI\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport type SolitaireThemesEffectUIArgs = {\n    skin: SolitaireSkin,\n    offset?: cc.Vec2\n}\n\n@ccclass\nexport default class SolitaireThemesEffectUI extends ii.UIComp<SolitaireThemesEffectUIArgs> {\n    @property(cc.Sprite) bgSprite: cc.Sprite = null;\n    @property(cc.Sprite) bgPatternSprite: cc.Sprite = null;\n    @property(cc.Node) private columnsRoot: cc.Node = null;\n    @property({type: cc.Node, visible: true}) private _offsetRoot: cc.Node = null;\n    \n    private m_Columns: SolitaireThemesEffectColumnUI[] = [];\n    private readonly ColumnCfg = [\n        {receive: [], play: [\n            {suit: ESuit.MEIHUA, point: 13, status: EPokerStatus.OPEN}\n        ]},\n        {receive: [ {suit: ESuit.HONGXIN, point: 1, status: EPokerStatus.OPEN} ], play: [\n            {suit: ESuit.HONGXIN, point: 1, status: EPokerStatus.CLOSE}\n            ,{suit: ESuit.FANGKUAI, point: 12, status: EPokerStatus.OPEN}\n        ]},\n        {receive: [ {suit: ESuit.HONGXIN, point: 13, status: EPokerStatus.OPEN} ], play: [\n            {suit: ESuit.HONGXIN, point: 1, status: EPokerStatus.CLOSE}\n            ,{suit: ESuit.HONGXIN, point: 1, status: EPokerStatus.CLOSE}\n            ,{suit: ESuit.HEITAO, point: 11, status: EPokerStatus.OPEN}\n        ]}\n    ]\n    \n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: SolitaireThemesEffectUIArgs): void {\n        if(this.args.offset != null) {\n            this._offsetRoot.position = cc.v3(this.args.offset.x, this.args.offset.y);\n        }\n        const COLUMN_CNT = this.ColumnCfg.length;\n        for(let i=0;i<COLUMN_CNT;++i) {\n            this.m_Columns.push(ii.UIMgr.ins.Create<SolitaireThemesEffectColumnUI, SolitaireThemesEffectColumnUIArgs>(SolitairePrefabCfg.pfb.comp.SolitaireThemesEffectColumnUI.key, {\n                x: (i-(COLUMN_CNT-1)*0.5)*114,\n                receive: this.ColumnCfg[i].receive,\n                play: this.ColumnCfg[i].play,\n            }, this.columnsRoot).CloseBy(this));\n        }\n\n        this.SetSkin(this.args.skin);\n    }\n\n    SetSkin(skin: SolitaireSkin) {\n        this.m_Columns.forEach(column=>column.SetSkin(skin));\n        this.LoadRes<cc.SpriteFrame>(SolitaireSpriteFrameCfg.bgSkinUrl(skin.bgSkin), sp=>{\n            this.bgSprite.spriteFrame = this.SetAssetProperty(\"BG_SKIN\", sp);\n        }, false, this.UUID_GROUP_KEY(\"BG_SKIN\"))\n        this.bgPatternSprite.node.active = skin.bgPatternSkin !== -1\n        if(skin.bgPatternSkin >= 0) {\n            this.LoadRes<cc.SpriteFrame>(SolitaireSpriteFrameCfg.bgPatternSkinUrl(skin.bgPatternSkin), sp=>this.bgPatternSprite.spriteFrame = this.SetAssetProperty(\"BG_PATTERN_SKIN\", sp), false, this.UUID_GROUP_KEY(\"BG_PATTERN_SKIN\"))\n        }\n    }\n}\n"]}