{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\UIThemeMenuContentBoardsPatternItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAqE;AAE/D,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAQ1C;IAAiE,uDAAkD;IAAnH;QAAA,qEAsBC;QArBkC,cAAQ,GAAc,IAAI,CAAA;QAC5B,mBAAa,GAAY,IAAI,CAAA;;IAoB9D,CAAC;IAlBa,sDAAQ,GAAlB,cAA6B,CAAC;IACpB,uDAAS,GAAnB,cAA8B,CAAC;IACrB,oDAAM,GAAhB,UAAiB,MAA+C;QAAhE,iBAMC;QALG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;QAClC,IAAG,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAiB,iDAAuB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,UAAA,EAAE,IAAE,OAAA,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAxE,CAAwE,EAAE,KAAK,CAAC,CAAA;SACvL;IACL,CAAC;IAEO,yDAAW,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAGD,oDAAM,GAAN,UAAO,aAAqB;QACxB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC;IACzE,CAAC;IApBoB;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yEAAqC;IACtC;QAAlB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8EAAwC;IAFzC,mCAAmC;QADvD,OAAO;OACa,mCAAmC,CAsBvD;IAAD,0CAAC;CAtBD,AAsBC,CAtBgE,EAAE,CAAC,MAAM,GAsBzE;kBAtBoB,mCAAmC","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSpriteFrameCfg } from \"../SolitaireSpriteFrameCfg\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport type UIThemeMenuContentBoardsPatternItemArgs = {\n    bgPatternSkin: number,\n    OnSelect: (bgPatternSkin: number)=>void\n}\n\n@ccclass\nexport default class UIThemeMenuContentBoardsPatternItem extends ii.UIComp<UIThemeMenuContentBoardsPatternItemArgs> {\n    @property(cc.Sprite) protected bgSprite: cc.Sprite = null\n    @property(cc.Node) protected highLightNode: cc.Node = null\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: UIThemeMenuContentBoardsPatternItemArgs): void {\n        this.SetIIClickHandler(\"OnClick\", this.OnItemClick.bind(this));\n        this.highLightNode.active = false;\n        if(this.args.bgPatternSkin >= 0) {\n            this.LoadRes<cc.SpriteFrame>(SolitaireSpriteFrameCfg.bgPatternSkinUrl(this.args.bgPatternSkin), sp=>this.bgSprite.spriteFrame = this.SetAssetProperty(\"BG_PATTERN_SKIN\", sp), false)\n        }\n    }\n\n    private OnItemClick() {\n        this.args.OnSelect(this.args.bgPatternSkin);\n    }\n\n\n    Select(bgPatternSkin: number) {\n        this.highLightNode.active = this.args.bgPatternSkin == bgPatternSkin;\n    }\n}\n"]}