{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\_Public\\Component\\UISettingToggle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UISettingToggle extends cc.Component {\n    @property(cc.Sprite) onSprite: cc.Sprite = null \n    @property(cc.Sprite) offSprite: cc.Sprite = null \n    @property(cc.Sprite) toggleSprite: cc.Sprite = null \n\n    private m_onToggleCallback: (isOn: boolean) => void = null \n    private m_isOn: boolean = false\n    private m_IsBlockInput: boolean = false\n\n    Init (isOn: boolean, onToggleCallback: (isOn: boolean) => void) {\n        this.m_isOn = isOn\n        this.m_onToggleCallback = onToggleCallback\n        this.toggleSprite.node.position = this.getTogglePositionByStatus(!this.m_isOn)\n        this.toggleAction(this.m_isOn)\n    }\n    private getTogglePositionByStatus(isOn: boolean) {\n        return isOn ? cc.v3(20, this.toggleSprite.node.y, 0) : cc.v3(-24, this.toggleSprite.node.y, 0)\n    }\n    private toggleAction(isOn: boolean) {\n        let togglePosition = this.getTogglePositionByStatus(isOn)\n        cc.tween(this.toggleSprite.node)\n            .to(0.2, { position: togglePosition })\n            .start()\n        \n        this.__StopScheduler()\n\n        let targetRange = isOn ? 1 : 0\n        let sr = isOn ? 0 : 1\n        let dr = (targetRange-sr)/(60*0.2)\n        this.m_Scheduler = ()=> {\n            this.onSprite.getComponent(cc.Sprite).fillRange = sr\n            sr += dr\n            if(sr > 1 || sr < 0) {\n                this.__StopScheduler()\n            }\n        }\n        this.schedule(this.m_Scheduler)\n    }\n\n    private m_Scheduler: Function = null \n    private __StopScheduler() {\n        if(this.m_Scheduler){\n            this.unschedule(this.m_Scheduler)\n            this.m_Scheduler = null\n        }\n    }\n\n    @ii.Util.block(0.2)\n    private OnClick() {\n        if(this.m_IsBlockInput) { return; }\n        ii.AudioMgr.ins.PlayEffect();\n        this.m_isOn = !this.m_isOn\n        this.toggleAction(this.m_isOn)\n        if(this.m_onToggleCallback) {\n            this.m_onToggleCallback(this.m_isOn)\n        }\n    }\n\n    SetBlockInput(block: boolean) {\n        this.m_IsBlockInput = block;\n    }\n\n    SyncUI(isOn: boolean) {\n        if(isOn == this.m_isOn) {\n            return;\n        }\n        this.m_isOn = isOn\n        this.toggleSprite.node.position = this.getTogglePositionByStatus(!this.m_isOn);\n        this.toggleAction(isOn);\n    }\n}\n"]}