{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\_Public\\Component\\ActionBreath.ts"],"names":[],"mappings":";;;;;AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;AAEG,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEA2BC;QA1BqB,gBAAU,GAAW,GAAG,CAAA;QACxB,gBAAU,GAAW,GAAG,CAAA;QACxB,iBAAW,GAAY,KAAK,CAAA;QAEtC,iBAAW,GAAW,GAAG,CAAA;QAQzB,iBAAW,GAAY,KAAK,CAAA;;IAcxC,CAAC;IArBG,4BAAK,GAAL;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA;QAClC,IAAG,IAAI,CAAC,WAAW,EAAE;YACjB,IAAI,CAAC,eAAe,EAAE,CAAA;SACzB;IACL,CAAC;IAGD,sCAAe,GAAf;QACI,IAAG,IAAI,CAAC,WAAW,EAAE;YACjB,OAAM;SACT;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,EAAE;aAClB,KAAK,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC;aAC1B,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,WAAW,EAAC,EAAE,EAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC;aAC3F,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,EAAE,EAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,CAAA;QAC/E,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aACd,aAAa,CAAC,MAAM,CAAC;aACrB,KAAK,EAAE,CAAA;IAChB,CAAC;IAzBS;QAAT,QAAQ;oDAAiC;IAChC;QAAT,QAAQ;oDAAiC;IAChC;QAAT,QAAQ;qDAAqC;IAH7B,YAAY;QADhC,OAAO;OACa,YAAY,CA2BhC;IAAD,mBAAC;CA3BD,AA2BC,CA3ByC,EAAE,CAAC,SAAS,GA2BrD;kBA3BoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["/**\n * 呼吸组件：随着时间的推移，放大缩小\n */\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ActionBreath extends cc.Component {\n    @property private m_MaxScale: number = 1.2\n    @property private m_Interval: number = 1.8\n    @property private PlayOnStart: boolean = false\n\n    private m_InitScale: number = 1.0\n    start() {\n        this.m_InitScale = this.node.scale\n        if(this.PlayOnStart) {\n            this.RunBreathAction()\n        }\n    }\n\n    private m_IsRunning: boolean = false\n    RunBreathAction() {\n        if(this.m_IsRunning) {\n            return\n        }\n        this.m_IsRunning = true\n        let action = cc.tween()\n            .delay(this.m_Interval*0.9)\n            .to(this.m_Interval, {scale: this.m_MaxScale*this.m_InitScale}, {easing: cc.easing.sineOut})\n            .to(this.m_Interval, {scale: this.m_InitScale}, {easing: cc.easing.sineIn})\n        cc.tween(this.node)\n            .repeatForever(action)\n            .start()\n    }\n}\n"]}