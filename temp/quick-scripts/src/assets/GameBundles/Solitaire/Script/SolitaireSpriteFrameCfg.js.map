{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\SolitaireSpriteFrameCfg.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export type TPokerBackSkin = {kind:string, index: number}\nexport type TPokerBackSkinKind = { kind: string, count: number }\n\nexport class SolitaireSpriteFrameCfg {\n    //! 所有的精灵配置\n    private static __AddKey(key: string) { this._sp[key] = key; }\n    private static _sp: ii.StringKeyDict<string> = null;\n    static get sp(): ii.StringKeyDict<string> {\n        if(this._sp === null) {\n            this._sp = {}\n            this.pokerBackKindCfg.forEach(it=>{\n                for(let i=0;i<it.count;++i) { this.__AddKey(this.__pokerBackUrl(it.kind, i)); }\n            }); // back\n            for(let i=0;i<this.pokerFrontLength;++i) { this.__AddKey(this.pokerFrontUrl(i)); } // front\n            for(let i=0;i<this.bgSkinLength;++i) { this.__AddKey(this.bgSkinUrl(i)); } // bg\n            for(let i=0;i<this.bgPatternSkinLength;++i) { this.__AddKey(this.bgPatternSkinUrl(i)); this.__AddKey(this.bgPatternPreviewSkinUrl(i)) } // bgPattern / bgPatternPreview\n        }\n        return this._sp;\n    }\n\n    //! 注册接口\n    static Register(bundleName: string): void {\n        console.info(`SolitaireSpriteFrameCfg::Register(${bundleName}) >> 注册 SpriteFrame 资源`)\n        ii.registerResDict(this.sp, bundleName, ii.EResType.SpriteFrame);\n    }\n\n    //! 桌面背景\n    static readonly bgSkinLength: number = 27;\n    static bgSkinUrl(bgSkin: number): string { return `skin_bg/skin_bg_${bgSkin}` }\n\n    //! 桌面背景花纹\n    static readonly bgPatternSkinLength: number = 14;\n    static bgPatternSkinUrl(bgPatternSkin: number): string { return `skin_bg_pattern/skin_bg_pattern_${bgPatternSkin}` }\n    static bgPatternPreviewSkinUrl(bgPatternSkin: number): string { return `skin_bg_pattern_preview/skin_bg_pattern_preview_${bgPatternSkin}` }\n\n    //! 扑克牌的背面\n    static readonly pokerBackKindCfg: TPokerBackSkinKind[] = [\n        {kind: \"classic\", count: 10},\n        {kind: \"animals\", count: 10},\n        {kind: \"artistic\", count: 10},\n        {kind: \"christmas\", count: 10},\n        {kind: \"food\", count: 10},\n        {kind: \"natural\", count: 10},\n        {kind: \"novel\", count: 10},\n        {kind: \"pattern\", count: 10},\n        {kind: \"snow\", count: 10},\n        {kind: \"sporty\", count: 10}\n    ]\n    private static __pokerBackUrl(kind: string, index: number): string { return `poker_bg/poker_${kind}_${index}` }\n    static pokerBackUrl(backSkin: TPokerBackSkin): string { return this.__pokerBackUrl(backSkin.kind, backSkin.index); }\n\n    //! 扑克牌的正面\n    static readonly pokerFrontLength: number = 2;\n    static pokerFrontUrl(frontSkin: number): string { return `poker_front/poker_front_${frontSkin}` }\n\n    //! 扑克牌的花色、红黑数字、JQK\n    static getFaceSuitSpritFrameUrl(faceSkin: number, suit: number) { return `AutoAtlas/p_face/p_face_${faceSkin}_${suit}` }\n    static getJQKSpriteFrameUrl(faceSkin: number, suit: number, point: number): string { return `AutoAtlas/p_face_point/p_face_point_${faceSkin}_${suit}_${point}` }\n    static getBlackPointSpriteFrameUrl(faceSkin: number, point: number): string { return `AutoAtlas/p_num/p_num_${faceSkin}_b_${point}` }\n    static getRedPointSpriteFrameUrl(faceSkin: number, point: number): string { return `AutoAtlas/p_num/p_num_${faceSkin}_r_${point}` }\n}\n"]}