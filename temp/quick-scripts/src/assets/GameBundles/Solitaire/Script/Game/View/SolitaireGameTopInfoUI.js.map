{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Game\\View\\SolitaireGameTopInfoUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireEvent } from \"../../SolitaireEvent\";\nimport { SolitairePrefabCfg } from \"../../SolitairePrefabCfg\";\nimport { ISolitaireJuEventListener, SolitaireJu } from \"../Model/SolitaireJu\";\n\nexport type SolitaireGameTopInfoUIArgs = {\n    OnBack: Function\n}\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class SolitaireGameTopInfoUI extends ii.UIComp<SolitaireGameTopInfoUIArgs> implements ISolitaireJuEventListener {\n    @property({type:cc.Label,visible:true}) private _scoreLabel: cc.Label = null\n    @property({type:cc.Label,visible:true}) private _timeLabel: cc.Label = null\n    @property({type:cc.Label,visible:true}) private _moveStepLabel: cc.Label = null\n    @property({type:cc.Label,visible:true}) private _effectLabel: cc.Label = null \n    @property({type:cc.Node,visible:true}) private _visiableNode: cc.Node = null\n\n    private _bHideMenuUIBV: ii.BooleanBV = null;\n    private _bAutoCollecting: boolean = false;\n    private _bAutoPlaying: boolean = false;\n    private UpdateStatus() { this._bHideMenuUIBV.v = this._bAutoCollecting || this._bAutoPlaying; }\n\n    protected OnCreate(): void {\n        this._effectLabel.node.active = false\n    }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: SolitaireGameTopInfoUIArgs): void {\n        this.SetIIClickHandler(\"OnBack\", this.args.OnBack);\n        this.SetIIClickHandler(\"OnOptions\", ()=>ii.UIMgr.ins.Open(SolitairePrefabCfg.pfb.panel.SolitaireOptionsUIPanel.key));\n\n        this._bHideMenuUIBV = ii.BooleanBV.Borrow(false).ReturnBy(this);\n        this._bHideMenuUIBV.Bind(hide=>this._visiableNode.active = !hide, true, this);\n    }\n\n    get SolitaireJuEventTarget(): any { return this.node; }\n    OnSolitaireDesktopEvent(ju: SolitaireJu, eventTyp: SolitaireEvent, data?: any): void {\n        switch (eventTyp) {\n            case SolitaireEvent.SC_TIME_CHANGED: this.UpdateUITime(data); break;\n            case SolitaireEvent.SC_UI_SUBSCRIB: this.SubScribModelEvents(ju); break;\n        }\n    }\n\n    private UpdateUITime(tick: number) { this._timeLabel.string = ii.date.Format(tick, \"mm:ss\") }\n\n    private SubScribModelEvents(ju: SolitaireJu) {\n        // 监听模型数据变化，更新当前页面所需的状态数据\n        ju.scoreBV.Bind(this.OnScoreValueChanged.bind(this) , false, this)\n    }\n\n    private OnScoreValueChanged(score: number, preScore: number) {\n        let changed = score - preScore\n        this._effectLabel.string = `${changed > 0 ? \"+\" : \"\"}${changed}`\n        this._effectLabel.node.active = true\n        cc.Tween.stopAllByTarget(this._effectLabel.node)\n        this._effectLabel.node.position = cc.Vec3.ZERO\n        cc.tween(this._effectLabel.node)\n            .by(1, {position: cc.v3(0, 30, 0)})\n            .call(node => node.active = false)\n            .start()\n    }\n\n    Enter(ju: SolitaireJu) {\n        this._effectLabel.node.active = false\n        this.BindBV(ju.scoreBV, score => this._scoreLabel.string = `${score}` , true);\n        this.BindBV(ju.isAutoPlayingBV, autoPlaying=>{\n            this._bAutoPlaying = autoPlaying; this.UpdateStatus();\n        }, true);\n        this.BindBV(ju.isAutoCollectingBV, autoCollecting=>{ this._bAutoCollecting = autoCollecting; this.UpdateStatus(); }, true);\n        this.BindBV(ju.moveStepCountBV, step => this._moveStepLabel.string = `${step}`, true)\n        ju.AddEventListener(this);\n    }\n\n    Exit(ju: SolitaireJu) {\n        ju.RemoveEventListener(this);\n        this.UnbindAllBV();\n    }\n}\n"]}