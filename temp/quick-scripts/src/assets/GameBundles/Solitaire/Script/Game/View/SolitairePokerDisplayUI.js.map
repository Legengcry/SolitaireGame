{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Game\\View\\SolitairePokerDisplayUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * 扑克牌的显示节点\n */\n\nimport { SolitaireSkin } from \"../../DataCache/SolitaireSkinDataCache\";\nimport { SolitaireAutoAtlasCfg } from \"../../SolitaireAutoAtlasCfg\";\nimport { EPokerStatus, ESuit } from \"../../SolitaireEnums\";\nimport { SolitaireSpriteFrameCfg, TPokerBackSkin } from \"../../SolitaireSpriteFrameCfg\";\n\nexport type SolitairePokerDisplayUIArgs = {\n    point: number,\n    suit: ESuit,\n    backSkin: TPokerBackSkin,\n    frontSkin: number,\n    status: EPokerStatus,\n    faceSkin: number\n}\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class SolitairePokerDisplayUI extends ii.UIComp<SolitairePokerDisplayUIArgs> {\n    @property({type:cc.Sprite,visible:true}) private _skinSprite: cc.Sprite = null\n    @property({type:cc.Sprite,visible:true}) private _pointSprite: cc.Sprite = null\n    @property({type:cc.Sprite,visible:true}) private _suitSprite: cc.Sprite = null\n    @property({type:cc.Sprite,visible:true}) private _smallSuitSprite: cc.Sprite = null\n\n    private m_Status: EPokerStatus = EPokerStatus.CLOSE;\n    private m_Point: number = 0;\n    private m_Suit: ESuit = ESuit.HEITAO;\n    private m_backSkin: TPokerBackSkin = {\n        kind: \"classic\",\n        index: 0\n    };\n    private m_frontSkin: number = 0;\n    private m_FaceSkin: number = 0\n    get backSkin(): TPokerBackSkin { return this.m_backSkin }\n    get frontSkin(): number { return this.m_frontSkin }\n    get skin(): number { return this.m_FaceSkin }\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: any): void {\n        this.m_Point = this.args.point;\n        this.m_Suit = this.args.suit;\n        this.m_backSkin.kind = this.args.backSkin.kind;\n        this.m_backSkin.index = this.args.backSkin.index;\n        this.m_frontSkin = this.args.frontSkin;\n        this.m_FaceSkin = this.args.faceSkin;\n        this.m_Status = this.args.status;\n\n        this.setStatus(this.m_Status);\n        // 花色、点数\n        this.__RefreshPointTexture();\n        this.__RefreshSuitSkinTexture();\n    }\n    private __RefreshPointTexture() {\n        if(this.m_Suit === ESuit.HEITAO || this.m_Suit === ESuit.MEIHUA) {\n            this.LoadRes<cc.SpriteFrame>(SolitaireAutoAtlasCfg.getBlackPointSpriteFrameUrl(this.m_FaceSkin, this.m_Point), sp=>this._pointSprite.spriteFrame = this.SetAssetProperty(\"FACE_SKIN\", sp), false, this.UUID_GROUP_KEY(\"FACE_SKIN\"));\n        }else{\n            this.LoadRes<cc.SpriteFrame>(SolitaireAutoAtlasCfg.getRedPointSpriteFrameUrl(this.m_FaceSkin, this.m_Point), sp=>this._pointSprite.spriteFrame = this.SetAssetProperty(\"FACE_SKIN\", sp), false, this.UUID_GROUP_KEY(\"FACE_SKIN\"));\n        }\n    }\n    private __RefreshSuitSkinTexture() {\n        this.LoadRes<cc.SpriteFrame>(SolitaireAutoAtlasCfg.getFaceSuitSpritFrameUrl(this.m_FaceSkin, this.m_Suit), sp=>this._smallSuitSprite.spriteFrame = this.SetAssetProperty(\"SMALL_SUIT_SKIN\", sp), false, this.UUID_GROUP_KEY(\"SMALL_SUIT_SKIN\"));\n        if(this.m_Point >= 11){\n            this.LoadRes<cc.SpriteFrame>(SolitaireAutoAtlasCfg.getJQKSpriteFrameUrl(this.m_FaceSkin, this.m_Suit, this.m_Point), sp=>this._suitSprite.spriteFrame = this.SetAssetProperty(\"SUIT_SKIN\", sp), false, this.UUID_GROUP_KEY(\"SUIT_SKIN\"));\n        }else{\n            this.LoadRes<cc.SpriteFrame>(SolitaireAutoAtlasCfg.getFaceSuitSpritFrameUrl(this.m_FaceSkin, this.m_Suit), sp=>this._suitSprite.spriteFrame = this.SetAssetProperty(\"SUIT_SKIN\", sp), false, this.UUID_GROUP_KEY(\"SUIT_SKIN\"));\n        }\n    }\n    private setStatus(status: EPokerStatus) {\n        // 由于 UI 需要进行表现，因此 model 和 UI 会出现不一致\n        this.m_Status = status\n        if(status == EPokerStatus.CLOSE){\n            this._pointSprite.node.active = false\n            this._suitSprite.node.active = false\n            this._smallSuitSprite.node.active = false\n            this.LoadRes<cc.SpriteFrame>(SolitaireSpriteFrameCfg.pokerBackUrl(this.m_backSkin), sp=>this._skinSprite.spriteFrame = this.SetAssetProperty(\"SKIN\", sp), false, this.UUID_GROUP_KEY(\"SKIN\"));\n        }else{\n            this._pointSprite.node.active = true\n            this._suitSprite.node.active = true\n            this._smallSuitSprite.node.active = true\n            this.LoadRes<cc.SpriteFrame>(SolitaireSpriteFrameCfg.pokerFrontUrl(this.m_frontSkin), sp=>this._skinSprite.spriteFrame = this.SetAssetProperty(\"SKIN\", sp), false, this.UUID_GROUP_KEY(\"SKIN\"));\n        }\n    }\n\n    Init(faceSkin: number, backSkin: TPokerBackSkin, frontSkin: number): SolitairePokerDisplayUI {\n        this.m_backSkin = backSkin\n        this.m_frontSkin = frontSkin\n        this.m_FaceSkin = faceSkin\n        this.__RefreshPointTexture()\n        this.__RefreshSuitSkinTexture()\n        this.setStatus(this.m_Status)\n        return this\n    }\n\n    setSkin(skin: SolitaireSkin) {\n        this.setFaceSkin(skin.faceSkin);\n        this.setFrontSkin(skin.frontSkin);\n        this.setBackSkin(skin.backSkin);\n        this.__RefreshPointTexture()\n        this.__RefreshSuitSkinTexture()\n        this.setStatus(this.m_Status)\n    }\n\n    setFaceSkin(faceSkin: number) {\n        if(this.m_FaceSkin !== faceSkin) {\n            this.m_FaceSkin = faceSkin\n            this.__RefreshPointTexture()\n            this.__RefreshSuitSkinTexture()\n            if(this.m_Status !== null){\n                this.setStatus(this.m_Status)\n            }\n        }\n    }\n    setFrontSkin(frontSkin: number) {\n        this.m_frontSkin = frontSkin\n        if(this.m_Status !== null){\n            this.setStatus(this.m_Status)\n        }\n    }\n    setBackSkin(backSkin: TPokerBackSkin) {\n        this.m_backSkin = backSkin\n        if(this.m_Status !== null){\n            this.setStatus(this.m_Status)\n        }\n    }\n\n    Refresh(status: EPokerStatus, suit: ESuit, point: number) {\n        this.m_Status = status;\n        this.m_Point = point;\n        this.m_Suit = suit;\n        this.__RefreshPointTexture();\n        this.__RefreshSuitSkinTexture();\n        this.setStatus(this.m_Status)\n    }\n}\n"]}