{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Options\\SolitaireOptionsUIPanel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireLogic } from \"../Logic/SolitaireLogic\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport UISettingToggle from \"../_Public/Component/UISettingToggle\";\nimport SolitaireActionUIPanel from \"../_Public/SolitaireActionUIPanel\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class SolitaireOptionsUIPanel extends SolitaireActionUIPanel {\n    @property(UISettingToggle) musicToggle: UISettingToggle = null\n    @property(UISettingToggle) soundToggle: UISettingToggle = null\n    @property(UISettingToggle) vibrateToggle: UISettingToggle = null;\n    @property(UISettingToggle) leftHandToggle: UISettingToggle = null;\n    @property({type:cc.Label,visible:true}) private _removeAdsHourLabel: cc.Label = null;\n    @property({type:cc.Button,visible:true}) private _removeAdsButton: cc.Button = null;\n\n    private readonly REMOVE_HOURS: number = 8;\n\n    protected OnCreate() {\n        super.OnCreate();\n        this.musicToggle.Init(!ii.AudioMgr.ins.musicOffBV.v, isOn => ii.AudioMgr.ins.musicOffBV.v = !isOn);\n        this.soundToggle.Init(!ii.AudioMgr.ins.effectOffBV.v, isOn => ii.AudioMgr.ins.effectOffBV.v = !isOn);\n        this.vibrateToggle.Init(!ii.App.ins.p.vibrate.off.v, isOn => {\n            ii.App.ins.p.vibrate.off.v = !isOn;\n            if(isOn) {\n                ii.App.ins.p.vibrate.Default();\n            }\n        });\n        this.leftHandToggle.Init(SolitaireLogic.dataCache.leftHandBV.v, isOn => SolitaireLogic.dataCache.leftHandBV.v = isOn);\n        this.SetIIClickHandler(\"OnBack\", this.OnBack.bind(this));\n        this.SetIIClickHandler(\"OnHowToPlay\", this.OnHowToPlay.bind(this));\n    }\n    \n    protected OnEnter(): void { }\n\n    private OnBack() {\n        this.ExitWithAction(this.Close.bind(this), false)\n    }\n\n    private OnHowToPlay() {\n        ii.UIMgr.ins.Open(SolitairePrefabCfg.pfb.panel.SolitaireHowToPlayUIPanel.key);\n        this.ExitWithAction(()=>{\n        }, true);\n    }\n\n}\n"]}