{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Statistics\\SolitaireStatisticsUIPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAC3D,4EAAuE;AACvE,uDAA4E;AAEtE,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;IAAwD,8CAAsB;IAA9E;QAAA,qEAiDC;QAhD0B,cAAQ,GAAgB,IAAI,CAAA;;IAgDvD,CAAC;IA9Ca,6CAAQ,GAAlB;QACI,iBAAM,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IAES,8CAAS,GAAnB;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;QACpC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAA;QAC9B,OAAM,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YACnB,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,0BAAgB,CAAC,CAAC,KAAK,EAAE,CAAC;SACtD;QACD,iBAAM,SAAS,WAAE,CAAC;IACtB,CAAC;IACS,4CAAO,GAAjB;QAAA,iBAcC;QAbG,IAAI,CAAC,YAAY,CAAC;YACd,SAAS;YACT,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE;gBACnC,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE;oBACnC,IAAI,IAAI,GAAqB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAyC,uCAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE;wBACvI,KAAK,EAAE,KAAK,KAAK,CAAC;wBAClB,KAAK,EAAE,KAAK,KAAK,CAAC;wBAClB,KAAK,EAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;qBAClC,CAAC,CAAC;oBACH,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;iBACnC;aACJ;QACL,CAAC,EAAE,CAAC,CAAC,CAAA;IACT,CAAC;IAEO,2CAAM,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC;YAChB,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAGO,4CAAO,GAAf;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAA;IAC5B,CAAC;IAED,sBAAY,mDAAW;aAAvB;YACI,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAA;YACnD,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;YACpC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,0BAAgB,CAAC,CAAA;QAC1D,CAAC;;;OAAA;IA/CsB;QAAtB,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;gEAA6B;IAuCnD;QADC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;6DAGlB;IA1CgB,0BAA0B;QAD9C,OAAO;OACa,0BAA0B,CAiD9C;IAAD,iCAAC;CAjDD,AAiDC,CAjDuD,gCAAsB,GAiD7E;kBAjDoB,0BAA0B","file":"","sourceRoot":"/","sourcesContent":["import { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport SolitaireActionUIPanel from \"../_Public/SolitaireActionUIPanel\";\nimport UIStatisticsPage, { UIStatisticsPageArgs } from \"./UIStatisticsPage\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class SolitaireStatisticsUIPanel extends SolitaireActionUIPanel {\n    @property(cc.PageView) pageView: cc.PageView = null \n\n    protected OnCreate() {\n        super.OnCreate();\n        this.SetIIClickHandler(\"OnBack\", this.OnBack.bind(this));\n        this.SetIIClickHandler(\"OnReset\", this.OnReset.bind(this));\n    }\n    \n    protected OnRelease(): void {\n        let pages = this.pageView.getPages()\n        this.pageView.removeAllPages()\n        while(pages.length > 0){\n            pages.pop().getComponent(UIStatisticsPage).Close();\n        }\n        super.OnRelease();\n    }\n    protected OnEnter(): void {\n        this.scheduleOnce(()=>{\n            // 加载不同的页\n            for(let card3 = 0; card3 < 2; ++card3) {\n                for(let vegas = 0; vegas < 2; ++vegas) {\n                    let page: UIStatisticsPage = ii.UIMgr.ins.Create<UIStatisticsPage, UIStatisticsPageArgs>(SolitairePrefabCfg.pfb.comp.UIStatisticsPage.key, {\n                        vegas: vegas === 1,\n                        card3: card3 === 1,\n                        width: this.pageView.node.width\n                    });\n                    this.pageView.addPage(page.node)\n                }\n            }\n        }, 0)\n    }\n\n    private OnBack() {\n        this.ExitWithAction(()=>{\n            this.Close();\n        }, false);\n    }\n\n    @ii.Util.block(0.2)\n    private OnReset() {\n        this.CurrentPage.Reset()\n    }\n\n    private get CurrentPage(): UIStatisticsPage {\n        let pageIndex = this.pageView.getCurrentPageIndex()\n        let pages = this.pageView.getPages()\n        return pages[pageIndex].getComponent(UIStatisticsPage)\n    }\n}\n"]}