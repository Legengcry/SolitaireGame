{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Game\\View\\UIPoker.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSkin } from \"../../DataCache/SolitaireSkinDataCache\";\nimport { ELocation, EPokerStatus } from \"../../SolitaireEnums\";\nimport { SolitairePrefabCfg } from \"../../SolitairePrefabCfg\";\nimport { TPokerBackSkin } from \"../../SolitaireSpriteFrameCfg\";\nimport Poker from \"../Model/Poker\";\nimport SolitaireGameDesktopUI from \"./SolitaireGameDesktopUI\";\nimport SolitairePokerDisplayUI, { SolitairePokerDisplayUIArgs } from \"./SolitairePokerDisplayUI\";\n\nconst {ccclass, property, requireComponent} = cc._decorator;\n@ccclass\nexport default class UIPoker extends ii.UIComp<Poker>{\n    static readonly DRAG_OFFSET_Y: number = 80;\n    private m_Display: SolitairePokerDisplayUI = null;\n    get backSkin(): TPokerBackSkin { return this.m_Display.backSkin; }\n    get frontSkin(): number { return this.m_Display.frontSkin; }\n    get faceSkin(): number { return this.m_Display.skin; }\n    /*********************************************************************\n     * LifeCycle\n     *********************************************************************/\n    get vm(): Poker { return this.args; }\n    protected OnCreate(): void { }\n    protected OnRelease(): void {\n        this.UnbindTouch();\n    }\n    protected OnOpen(uiArgs: Poker): void {\n        this.vm.view = this;\n        this.m_Display = ii.UIMgr.ins.Create<SolitairePokerDisplayUI, SolitairePokerDisplayUIArgs>(SolitairePrefabCfg.pfb.comp.SolitairePokerDisplayUI.key, {\n            point: this.vm.point,\n            suit: this.vm.suit,\n            backSkin: { kind: \"classic\",index:0 },\n            frontSkin: 0,\n            status: this.vm.status,\n            faceSkin: 0\n        }, this.node).CloseBy(this);\n    }\n    Init(faceSkin: number, backSkin: TPokerBackSkin, frontSkin: number): UIPoker { this.m_Display.Init(faceSkin, backSkin, frontSkin); return this; }\n    setSkin(skin: SolitaireSkin) { this.m_Display.setSkin(skin); }\n    setFaceSkin(faceSkin: number) { this.m_Display.setFaceSkin(faceSkin); }\n    setFrontSkin(frontSkin: number) { this.m_Display.setFrontSkin(frontSkin); }\n    setBackSkin(backSkin: TPokerBackSkin) { this.m_Display.setBackSkin(backSkin); }\n    Refresh() {\n        this.m_Display.Refresh(this.vm.status, this.vm.suit, this.vm.point);\n    }\n    \n    /*********************************************************************\n     * Public API\n     *********************************************************************/\n    isOpen(): boolean {\n        return this.vm.status == EPokerStatus.OPEN\n    }\n\n    isPoint(point: number): boolean {\n        return this.vm.point == point\n    }\n\n    //#region //! IDrag\n    private _touchDelegate: SolitaireGameDesktopUI = null;\n    private _bBindTouch: boolean = false;\n    private _moveTargetPosition: cc.Vec2 = null;\n    SetTouchDelegate(touchDelegate: SolitaireGameDesktopUI) {\n        this._touchDelegate = touchDelegate;\n        this.BindTouch();\n    }\n    private BindTouch() {\n        if(!this._bBindTouch) {\n            this._bBindTouch = true;\n            this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n        }\n    }\n    private UnbindTouch() {\n        if(this._bBindTouch) {\n            this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n            this._bBindTouch = false;\n        }\n    }\n    private onTouchStart (event: cc.Event.EventTouch): boolean { return this._touchDelegate.OnDragTouchStart(this, event); }\n    private onTouchMove (event: cc.Event.EventTouch) { this._touchDelegate.OnDragTouchMove(this, event); }\n    private onTouchEnd (event: cc.Event.EventTouch) { this._touchDelegate.OnDragTouchEnd(this, event); }\n    DragStartTest(): boolean {\n        if(this.isOpen()){\n            // Open 区域，只允许最上方的牌被拖拽\n            if((this.vm.location !== ELocation.OPEN) || (this.vm.isTop)) {\n                return true\n            }\n        }\n        return false\n    }\n    \n    OnDragStart(event: cc.Event.EventTouch) {\n        // 点击时触摸点的位置；\n        let _dragStartPosition = this.node.parent.convertToNodeSpaceAR(event.getLocation());\n        this._moveTargetPosition = cc.v2(_dragStartPosition.x, _dragStartPosition.y + UIPoker.DRAG_OFFSET_Y);\n        this.StartScheduler(\"MOVE_TO_TARGET\", this.__MoveToTarget.bind(this), 0);\n    }\n\n    OnDragMove(event: cc.Event.EventTouch) {\n        let pos = this.node.parent.convertToNodeSpaceAR(event.getLocation());\n        this._moveTargetPosition = cc.v2(pos.x, pos.y+UIPoker.DRAG_OFFSET_Y);\n        if(!this.HasScheduler(\"MOVE_TO_TARGET\")) {\n            this.setPositionWhenFollow(pos.x, pos.y);\n        }\n    }\n    OnDragEnd() {\n        this.StopScheduler(\"MOVE_TO_TARGET\");\n    }\n\n    private __MoveToTarget(dt: number) {\n        let dx = this._moveTargetPosition.x-this.node.x;\n        let dy = this._moveTargetPosition.y-this.node.y;\n        if(dx*dx + dy*dy < 10) {\n            this.setPositionWhenFollow(this._moveTargetPosition.x, this._moveTargetPosition.y);\n        }else{\n            this.setPositionWhenFollow(this.node.x + 18*dx*dt, this.node.y + 18*dy*dt);\n        }\n    }\n\n    private setPositionWhenFollow(x: number, y: number) {\n        this.node.x = x\n        this.node.y = y\n        if(!this.vm.isTop) {\n            // 其他牌跟随移动逻辑\n            let pokerIndex = this.vm.indexInGroup\n            let pokerLength = this.vm.group.pokers.length\n            for(let abovePokerIndex= pokerIndex+1; abovePokerIndex < pokerLength; ++abovePokerIndex) {\n                let abovePoker = this.vm.group.GetPoker(abovePokerIndex)\n                let aboveNode = abovePoker.view.node\n                aboveNode.x = x\n                aboveNode.y = this.node.y-SolitaireGameDesktopUI.PLAY_OPEN_POKER_PADDING_Y*(abovePokerIndex-pokerIndex)\n            }\n        }\n    }\n    //#endregion\n}\n"]}