{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\UIThemeMenuContentPokerFace.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA,kEAAiE;AACjE,4DAA2D;AAC3D,2DAAsD;AAEhD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAQ1C;IAAyD,+CAAmD;IAA5G;QAAA,qEA6BC;QA5BoC,gBAAU,GAAkB,IAAI,CAAA;QAEzD,iBAAW,GAAsC,EAAE,CAAA;;IA0B/D,CAAC;IAxBa,8CAAQ,GAAlB;IACA,CAAC;IACS,+CAAS,GAAnB;QACI,wBAAwB;IAC5B,CAAC;IACS,4CAAM,GAAhB,UAAiB,MAAuC;QAAxD,iBASC;QARG,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,6CAAqB,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAuE,uCAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,+BAA+B,CAAC,GAAG,EAAE;gBAC7K,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,UAAC,QAAgB,IAAM,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;aACzE,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACnC,CAAC;IAED,4CAAM,GAAN,UAAO,QAAgB;QACnB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAnB,CAAmB,CAAC,CAAA;IACvD,CAAC;IAED,iDAAW,GAAX,UAAY,IAAmB;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IA3BwB;QAAxB,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;mEAAyC;IADhD,2BAA2B;QAD/C,OAAO;OACa,2BAA2B,CA6B/C;IAAD,kCAAC;CA7BD,AA6BC,CA7BwD,4BAAkB,GA6B1E;kBA7BoB,2BAA2B","file":"","sourceRoot":"/","sourcesContent":["import UIThemeMenuContentPokerFaceItem, { UIThemeMenuContentPokerFaceItemArgs } from \"./UIThemeMenuContentPokerFaceItem\";\nimport { SolitaireSkin } from \"../DataCache/SolitaireSkinDataCache\";\nimport { SolitaireAutoAtlasCfg } from \"../SolitaireAutoAtlasCfg\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport UIThemeMenuContent from \"./UIThemeMenuContent\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport type UIThemeMenuContentPokerFaceArgs = {\n    faceSkin: number,\n    OnSelect: (content: UIThemeMenuContentPokerFace, faceSkin: number)=>void\n}\n\n@ccclass\nexport default class UIThemeMenuContentPokerFace extends UIThemeMenuContent<UIThemeMenuContentPokerFaceArgs> {\n    @property(cc.ScrollView) private scrollView: cc.ScrollView = null\n    \n    private m_itemArray: UIThemeMenuContentPokerFaceItem[] = []\n    \n    protected OnCreate(): void {\n    }\n    protected OnRelease(): void {\n        // this.ReleaseContent()\n    }\n    protected OnOpen(uiArgs: UIThemeMenuContentPokerFaceArgs): void {\n        for(let i=0; i<SolitaireAutoAtlasCfg.FaceSkinCnt; ++i) {\n            this.m_itemArray.push(ii.UIMgr.ins.Create<UIThemeMenuContentPokerFaceItem, UIThemeMenuContentPokerFaceItemArgs>(SolitairePrefabCfg.pfb.comp.UIThemeMenuContentPokerFaceItem.key, {\n                faceSkin: i,\n                OnSelect: (faceSkin: number)=> { this.args.OnSelect(this, faceSkin); }\n            }, this.scrollView.content).CloseBy(this));\n        }\n\n        this.Select(this.args.faceSkin)\n    }\n\n    Select(faceSkin: number) {\n        ii.AudioMgr.ins.PlayEffect();\n        this.m_itemArray.forEach(it => it.Select(faceSkin))\n    }\n\n    OnResetSkin(skin: SolitaireSkin) {\n        this.Select(skin.faceSkin);\n    }\n}\n"]}