{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\UIThemeMenuContentBoards.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSkin } from \"../DataCache/SolitaireSkinDataCache\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport { SolitaireSpriteFrameCfg } from \"../SolitaireSpriteFrameCfg\";\nimport UIThemeMenuContent from \"./UIThemeMenuContent\";\nimport UIThemeMenuContentBoardsBackgroundColorItem, { UIThemeMenuContentBoardsBackgroundColorItemArgs } from \"./UIThemeMenuContentBoardsBackgroundColorItem\";\nimport UIThemeMenuContentBoardsPatternItem, { UIThemeMenuContentBoardsPatternItemArgs } from \"./UIThemeMenuContentBoardsPatternItem\";\n\nconst {ccclass, property} = cc._decorator;\nexport type UIThemeMenuContentBoardsArgs = {\n    bgSkin: number,\n    bgPatternSkin: number,\n    OnSelectBG: (content: UIThemeMenuContentBoards, bgSkin: number)=>void,\n    OnSelectBGPattern: (content: UIThemeMenuContentBoards, bgPatternSkin: number)=>void,\n}\n@ccclass\nexport default class UIThemeMenuContentBoards extends UIThemeMenuContent<UIThemeMenuContentBoardsArgs> {\n    @property(cc.ScrollView) private bgSkinScrollView: cc.ScrollView = null    \n    @property(cc.ScrollView) private bgPatternSkinScrollView: cc.ScrollView = null\n\n    private m_bgSkinItemArray: UIThemeMenuContentBoardsBackgroundColorItem[] = []\n    private m_bgPatternSkinItemArray: UIThemeMenuContentBoardsPatternItem[] = []\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: UIThemeMenuContentBoardsArgs): void {\n        for(let bgSkin=0; bgSkin<SolitaireSpriteFrameCfg.bgSkinLength; ++bgSkin) {\n            this.m_bgSkinItemArray.push(ii.UIMgr.ins.Create<UIThemeMenuContentBoardsBackgroundColorItem, UIThemeMenuContentBoardsBackgroundColorItemArgs>(SolitairePrefabCfg.pfb.comp.UIThemeMenuContentBoardsBackgroundColorItem.key, {\n                bgSkin: bgSkin,\n                OnSelect: (bgSkin: number)=>this.args.OnSelectBG(this, bgSkin)\n            }, this.bgSkinScrollView.content).CloseBy(this));\n        }\n        this.SelectBG(this.args.bgSkin);\n\n        for(let bgPatternSkin=-1; bgPatternSkin<SolitaireSpriteFrameCfg.bgPatternSkinLength; ++bgPatternSkin) {\n            this.m_bgPatternSkinItemArray.push(ii.UIMgr.ins.Create<UIThemeMenuContentBoardsPatternItem, UIThemeMenuContentBoardsPatternItemArgs>(SolitairePrefabCfg.pfb.comp.UIThemeMenuContentBoardsPatternItem.key, {\n                bgPatternSkin: bgPatternSkin,\n                OnSelect: (bgPatternSkin: number)=>this.args.OnSelectBGPattern(this, bgPatternSkin)\n            }, this.bgPatternSkinScrollView.content).CloseBy(this));\n        }\n        this.SelectBG(this.args.bgSkin);\n        this.SelectBGPattern(this.args.bgPatternSkin);\n    }\n\n    SelectBG(bgSkin: number) {\n        this.m_bgSkinItemArray.forEach(it => it.Select(bgSkin))\n    }\n\n    OnResetSkin(skin: SolitaireSkin) {\n        this.SelectBG(skin.bgSkin);\n        this.SelectBGPattern(skin.bgPatternSkin);\n    }\n\n    SelectBGPattern(bgPatternSkin: number) {\n        this.m_bgPatternSkinItemArray.forEach(it => it.Select(bgPatternSkin))\n    }\n}\n"]}