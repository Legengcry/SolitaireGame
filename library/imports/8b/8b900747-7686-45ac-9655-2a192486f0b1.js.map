{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\SolitaireThemesSelfSkinUI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,0DAAyD;AACzD,4DAA2D;AAGrD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAK1C;IAAuD,6CAAwC;IAA/F;QAAA,qEAyCC;QAxCoD,aAAO,GAAc,IAAI,CAAC;QAC5B,iBAAW,GAAY,IAAI,CAAC;QAC5B,iBAAW,GAAY,IAAI,CAAC;QAEnE,gBAAU,GAAoC,EAAE,CAAC;;IAoC7D,CAAC;IAlCa,4CAAQ,GAAlB,cAA6B,CAAC;IACpB,6CAAS,GAAnB,cAA8B,CAAC;IACrB,0CAAM,GAAhB,UAAiB,MAAqC;QAAtD,iBAWC;QAVG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,+BAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,+BAAc,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/D,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,GAAG,CAAC;aACV,EAAE,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;aACrB,GAAG,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAC,CAAC;aAClC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEO,gDAAY,GAApB,UAAqB,IAAmB,EAAE,KAAa;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAmE,uCAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,EAAE;YACtK,IAAI,MAAA;YACJ,KAAK,OAAA;YACL,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;SACrC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,4CAAQ,GAAhB;QAAA,iBAMC;QALG,gBAAgB;QAChB,+BAAc,CAAC,qBAAqB,CAAC,UAAC,KAAa;YAC/C,KAAI,CAAC,YAAY,CAAC,+BAAc,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7D,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,+BAAc,CAAC,IAAI,CAAC,eAAe,CAAC;QACnE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAS,GAAT,UAAU,KAAa,EAAE,IAAmB;QACxC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IAC1C,CAAC;IAvCwC;QAAxC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,MAAM,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;8DAAmC;IACpC;QAAtC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;kEAAqC;IACpC;QAAtC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;kEAAqC;IAH1D,yBAAyB;QAD7C,OAAO;OACa,yBAAyB,CAyC7C;IAAD,gCAAC;CAzCD,AAyCC,CAzCsD,EAAE,CAAC,MAAM,GAyC/D;kBAzCoB,yBAAyB","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireSkin } from \"../DataCache/SolitaireSkinDataCache\";\nimport { SolitaireLogic } from \"../Logic/SolitaireLogic\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\nimport SolitaireThemesSelfSkinItemUI, { SolitaireThemesSelfSkinItemUIArgs } from \"./SolitaireThemesSelfSkinItemUI\";\n\nconst {ccclass, property} = cc._decorator;\nexport type SolitaireThemesSelfSkinUIArgs = {\n    OnClickEdit(index: number)\n}\n@ccclass\nexport default class SolitaireThemesSelfSkinUI extends ii.UIComp<SolitaireThemesSelfSkinUIArgs> {\n    @property({type:cc.Layout,visible:true}) private _Layout: cc.Layout = null;\n    @property({type:cc.Node,visible:true}) private _unlockRoot: cc.Node = null;\n    @property({type:cc.Node,visible:true}) private _topBlocker: cc.Node = null;\n\n    private m_ItemList: SolitaireThemesSelfSkinItemUI[] = [];\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: SolitaireThemesSelfSkinUIArgs): void {\n        this.SetIIClickHandler(\"OnUnlock\", this.OnUnlock.bind(this));\n        SolitaireLogic.skin.SkinList.forEach((skin, index) => {\n            this.__CreateSkin(skin, index);\n        })\n        this._unlockRoot.active = !SolitaireLogic.skin.IsMaxSkinLength;\n        cc.tween(this._topBlocker)\n            .delay(0.3)\n            .to(0.3, {opacity: 0})\n            .set({active: false, opacity: 255})\n            .start();\n    }\n\n    private __CreateSkin(skin: SolitaireSkin, index: number) {\n        this.m_ItemList.push(ii.UIMgr.ins.Create<SolitaireThemesSelfSkinItemUI, SolitaireThemesSelfSkinItemUIArgs>(SolitairePrefabCfg.pfb.comp.SolitaireThemesSelfSkinItemUI.key, {\n            skin,\n            index,\n            OnClickEdit: this.args.OnClickEdit\n        }, this._Layout.node).CloseBy(this));\n    }\n\n    private OnUnlock() {\n        // 点击增加一个自定义皮肤按钮\n        SolitaireLogic.WatchToExtendSkinList((index: number)=>{\n            this.__CreateSkin(SolitaireLogic.skin.GetSkin(index), index);\n            this._unlockRoot.active = !SolitaireLogic.skin.IsMaxSkinLength;\n        });\n    }\n\n    RefreshUI(index: number, skin: SolitaireSkin) {\n        this.m_ItemList[index].RefreshUI(skin)\n    }\n}\n"]}