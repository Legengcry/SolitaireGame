{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Themes\\UIThemeMenuContentPokerFaceItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,oDAAwD;AACxD,4DAA2D;AAErD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAQ1C;IAA6D,mDAA8C;IAA3G;QAAA,qEAkCC;QAhCkC,cAAQ,GAAc,IAAI,CAAA;QAC5B,mBAAa,GAAY,IAAI,CAAA;QACP,aAAO,GAAc,IAAI,CAAA;QAEpE,sBAAgB,GAA8B,EAAE,CAAA;;IA4B5D,CAAC;wCAlCoB,+BAA+B;IAQtC,kDAAQ,GAAlB,cAA6B,CAAC;IACpB,mDAAS,GAAnB,cAA8B,CAAC;IACrB,gDAAM,GAAhB,UAAiB,MAAW;QAA5B,iBAeC;QAdG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gCACvD,IAAI;YACR,iCAA+B,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,KAAK;gBACtD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAuD,uCAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;oBAC1J,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,KAAK,EAAC,CAAC,EAAE;oBACrC,SAAS,EAAE,CAAC;oBACZ,MAAM,EAAE,6BAAY,CAAC,IAAI;oBACzB,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ;iBAC/B,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAA;;QAVN,KAAI,IAAI,IAAI,GAAC,sBAAK,CAAC,MAAM,EAAE,IAAI,IAAE,sBAAK,CAAC,QAAQ,EAAE,EAAE,IAAI;oBAA/C,IAAI;SAWX;QACD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;IACtC,CAAC;IAEO,qDAAW,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,gDAAM,GAAN,UAAO,QAAgB;QACnB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC;IAChE,CAAC;;IAhCe,4CAAY,GAAG,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA;IAC3B;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qEAAqC;IACtC;QAAlB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0EAAwC;IACjB;QAAxC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,MAAM,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;oEAAoC;IAJ3D,+BAA+B;QADnD,OAAO;OACa,+BAA+B,CAkCnD;IAAD,sCAAC;CAlCD,AAkCC,CAlC4D,EAAE,CAAC,MAAM,GAkCrE;kBAlCoB,+BAA+B","file":"","sourceRoot":"/","sourcesContent":["import SolitairePokerDisplayUI, { SolitairePokerDisplayUIArgs } from \"../Game/View/SolitairePokerDisplayUI\";\nimport { EPokerStatus, ESuit } from \"../SolitaireEnums\";\nimport { SolitairePrefabCfg } from \"../SolitairePrefabCfg\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport type UIThemeMenuContentPokerFaceItemArgs = {\n    faceSkin: number,\n    OnSelect: (faceSkin: number)=>void\n}\n\n@ccclass\nexport default class UIThemeMenuContentPokerFaceItem extends ii.UIComp<UIThemeMenuContentPokerFaceItemArgs> {\n    static readonly POKER_POINTS = [ 1, 11, 12, 13 ]\n    @property(cc.Sprite) protected bgSprite: cc.Sprite = null\n    @property(cc.Node) protected highLightNode: cc.Node = null\n    @property({type:cc.Layout,visible:true}) protected _layout: cc.Layout = null\n\n    private m_DisplayPokerUI: SolitairePokerDisplayUI[] = []\n    \n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: any): void {\n        this.SetIIClickHandler(\"OnClick\", this.OnItemClick.bind(this));\n        for(let suit=ESuit.HEITAO; suit<=ESuit.FANGKUAI; ++suit) {\n            UIThemeMenuContentPokerFaceItem.POKER_POINTS.forEach(point => {\n                this.m_DisplayPokerUI.push(ii.UIMgr.ins.Create<SolitairePokerDisplayUI, SolitairePokerDisplayUIArgs>(SolitairePrefabCfg.pfb.comp.SolitairePokerDisplayUI.key, {\n                    point: point,\n                    suit: suit,\n                    backSkin: { kind: \"classic\",index:0 },\n                    frontSkin: 0,\n                    status: EPokerStatus.OPEN,\n                    faceSkin: this.args.faceSkin\n                }, this._layout.node).CloseBy(this));\n            })\n        }\n        this.highLightNode.active = false;\n    }\n\n    private OnItemClick() {\n        this.args.OnSelect(this.args.faceSkin);\n    }\n\n    Select(faceSkin: number) {\n        this.highLightNode.active = this.args.faceSkin === faceSkin;\n    }\n}\n"]}