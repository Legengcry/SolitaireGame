{"version":3,"sources":["assets\\StartScene\\Script\\UIPanel\\LoginUIPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAAA;IAQA,CAAC;IALU,uBAAM,GAAb,UAAc,cAAwB;QAClC,IAAI,CAAC,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAC/B,CAAC,CAAC,cAAc,GAAG,cAAc,CAAC;QAClC,OAAO,CAAC,CAAC;IACb,CAAC;IACL,uBAAC;AAAD,CARA,AAQC,IAAA;AARY,4CAAgB;AAUvB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;IAAkC,gCAAU;IAA5C;QAAA,qEA2BC;QA1ByF,uBAAiB,GAAY,IAAI,CAAC;QAC3F,gBAAU,GAAY,IAAI,CAAC;QAC1B,iBAAW,GAAa,IAAI,CAAC;;IAwB/D,CAAC;IAtBa,+BAAQ,GAAlB,cAA6B,CAAC;IACpB,gCAAS,GAAnB,cAA8B,CAAC;IACrB,6BAAM,GAAhB,UAAiB,MAAwB;QACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAEO,8CAAuB,GAA/B,UAAgC,QAAiB;QAC7C,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC;IAC9C,CAAC;IAGO,4BAAK,GAAb,UAAc,gBAAyB;QAAvC,iBAUC;QATG,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;QAC/C,UAAU;QACV,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAC,MAA8B;YAC3D,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,UAAC,SAA+B;gBAClE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;gBAC3C,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC3C,KAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,gBAAgB,CAAC,CAAA;IACxB,CAAC;IAzBqF;QAArF,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;2DAAmC;IAC3F;QAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;oDAA4B;IAC1B;QAA7B,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;qDAA8B;IAHlD,YAAY;QADxB,OAAO;OACK,YAAY,CA2BxB;IAAD,mBAAC;CA3BD,AA2BC,CA3BiC,EAAE,CAAC,OAAO,GA2B3C;AA3BY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["export class LoginUIPanelArgs {\n    onLoginSuccess: Function;\n\n    static Create(onLoginSuccess: Function): LoginUIPanelArgs {\n        let m = new LoginUIPanelArgs();\n        m.onLoginSuccess = onLoginSuccess;\n        return m;\n    }\n}\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport class LoginUIPanel extends ii.UIPanel {\n    @property({ type: cc.Node, visible: true, tooltip: \"获取用户授权的根节点，微信平台将在这个节点上创建透明的按钮\" }) _authUserInfoRoot: cc.Node = null;\n    @property({ type: cc.Node }) buttonNode: cc.Node = null;\n    @property({ type: cc.Label }) buttonLabel: cc.Label = null;\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: LoginUIPanelArgs): void {\n        this.Login(true);\n    }\n\n    private UpdateUI_AuthedUserInfo(isAuthed: boolean): void {\n        this._authUserInfoRoot.active = !isAuthed;\n    }\n\n\n    private Login(isAuthedUserInfo: boolean): void {\n        this.UpdateUI_AuthedUserInfo(isAuthedUserInfo);\n        // 平台登陆帮助类\n        ii.App.ins.p.user.LoginPlatform((result: ii.PlatformLoginResult)=>{\n            ii.App.ins.p.user.LoginServer(result, (loginArgs: ii.ServerLoginResult)=>{//默认账号密码都能对上，直接登录成功\n                console.assert(loginArgs.success === true);\n                ii.Util.safeCall(this.args.onLoginSuccess);\n                this.Close();\n            });\n        }, isAuthedUserInfo)\n    }\n}\n"]}