{"version":3,"sources":["assets\\GameBundles\\Solitaire\\Script\\Game\\View\\UIGameWin.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SolitaireLogic } from \"../../Logic/SolitaireLogic\";\nimport { SolitaireAudioCfg } from \"../../SolitaireAudioCfg\";\nimport { SolitairePrefabCfg } from \"../../SolitairePrefabCfg\";\nimport { SolitaireJu } from \"../Model/SolitaireJu\";\nimport SolitaireGameUIPanel from \"./SolitaireGameUIPanel\";\n\n\nexport type UIGameWinArgs = {\n    ju: SolitaireJu,\n}\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class UIGameWin extends ii.UIPanel<UIGameWinArgs> {\n    @property({type:cc.Label,visible:true}) private timeLabel: cc.Label = null \n    @property({type:cc.Label,visible:true}) private scoreLabel: cc.Label = null \n    @property({type:cc.Label,visible:true}) private movesLabel: cc.Label = null \n    @property({type:cc.Label,visible:true}) private timeHistoryLabel: cc.Label = null \n    @property({type:cc.Label,visible:true}) private scoreHistoryLabel: cc.Label = null \n    @property({type:cc.Label,visible:true}) private movesHistoryLabel: cc.Label = null \n    @property({type:[cc.Label],visible:true}) private _seedLabels: cc.Label[] = [];\n\n    protected OnCreate(): void { }\n    protected OnRelease(): void { }\n    protected OnOpen(uiArgs: UIGameWinArgs): void {\n        this.SetIIClickHandler(\"OnReplay\", this.OnReplay.bind(this), true);\n        this.SetIIClickHandler(\"OnNextGame\", this.OnNextGame.bind(this), true);\n        // 数据\n        let historyValue = SolitaireLogic.dataCache.GetModeHistory(this.args.ju.isVegasMode, this.args.ju.isCard3Mode).v;\n        let gameTime = this.args.ju.gameTime;\n        let score = this.args.ju.scoreBV.v;\n        let moveStepCount = this.args.ju.moveStepCountBV.v;\n\n        // 数据显示\n        this.timeLabel.string = ii.date.Format(gameTime, \"mm:ss\");\n        this.scoreLabel.string = `${score}`;\n        this.movesLabel.string = `${moveStepCount}`;\n        this.timeHistoryLabel.string = ii.date.Format(historyValue.gameTimeBest, \"mm:ss\");\n        this.scoreHistoryLabel.string = `${historyValue.scoreBest}`;\n        this.movesHistoryLabel.string = `${historyValue.moveStepBest}`;\n        this._seedLabels.forEach(label=>label.string = `${this.args.ju.Seed}`);\n\n        // 播放胜利音效\n        ii.AudioMgr.ins.PlayEffect(SolitaireAudioCfg.effect.successful);\n        \n        this.TryToShowInterstitial();\n    }\n\n    private TryToShowInterstitial() {\n        if(SolitaireLogic.dataCache.passCountBV.v >= 3){\n            if(ii.App.ins.p.ad.IsInterstitialAvailable()) {\n                ii.App.ins.p.ad.ShowInterstitialWithBlocker(null, SolitairePrefabCfg.pfb.panel.LoadingADUIPanel.key, 2);\n            }else{\n                ii.App.ins.p.ad.LoadInterstitial();\n                if(ii.App.ins.p.user.GetGameCenterVal(\"GameTime\") > 16*3600) {\n                    ii.App.ins.p.user.FiveStar();\n                }\n            }\n        }\n    }\n    //! 点击重玩\n    private OnReplay() {\n        this.emitGlobal(SolitaireGameUIPanel.event.EVENT_GAMESCENE_REPLAY_GAME);\n        this.Close();\n    }\n\n    //! 点击下一关\n    private OnNextGame() {\n        this.emitGlobal(SolitaireGameUIPanel.event.EVENT_GAMESCENE_NEXT_GAME);\n        this.Close();\n    }\n}\n"]}